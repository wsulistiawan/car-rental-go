package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/wsulistiawan/car-rental-go/graph/generated"
)

// CreateMasterModel is the resolver for the createMasterModel field.
func (r *mutationResolver) CreateMasterModel(ctx context.Context, input generated.MasterModelMutationParam) (*generated.MasterModel, error) {
	panic(fmt.Errorf("not implemented: CreateMasterModel - createMasterModel"))
}

// CreateMasterUnit is the resolver for the createMasterUnit field.
func (r *mutationResolver) CreateMasterUnit(ctx context.Context, input generated.MasterUnitMutationParam) (*generated.MasterUnit, error) {
	panic(fmt.Errorf("not implemented: CreateMasterUnit - createMasterUnit"))
}

// GetMasterModel is the resolver for the getMasterModel field.
func (r *queryResolver) GetMasterModel(ctx context.Context, input generated.MasterModelQueryParam) (*generated.MasterModel, error) {
	panic(fmt.Errorf("not implemented: GetMasterModel - getMasterModel"))
}

// GetMasterUnit is the resolver for the getMasterUnit field.
func (r *queryResolver) GetMasterUnit(ctx context.Context, input generated.MasterUnitQueryParam) (*generated.MasterUnit, error) {
	panic(fmt.Errorf("not implemented: GetMasterUnit - getMasterUnit"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
